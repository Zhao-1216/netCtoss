<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.netctoss_springboot.mapper.ServiceMapper">

    <resultMap id="serviceMap" type="com.netctoss_springboot.pojo.Service">
        <id column="service_id" property="serviceId"/>
        <result column="account_id" property="accountId"/>
        <result column="unix_host" property="unixHost"/>
        <result column="os_username" property="osUsername"/>
        <result column="login_passwd" property="loginPasswd"/>
        <result column="status" property="status"/>
        <result column="create_date" property="createDate"/>
        <result column="pause_date" property="pauseDate"/>
        <result column="close_date" property="closeDate"/>
        <result column="cost_id" property="costId"/>
        <result column="real_name" property="realName"/>
        <result column="idcard_no" property="idCardNo"/>
        <result column="name" property="name"/>
        <result column="descr" property="descr"/>
        <result column="login_name" property="loginName"/>
        <result column="cost_type" property="costType"/>
    </resultMap>


    <select id="findByServiceId" resultMap="serviceMap">
        select service_id,s.account_id,a.real_name,a.idcard_no,unix_host,
        os_username,s.status,s.create_date,s.cost_id,c.name,c.descr,c.cost_type
        from service s
        left join account a on s.account_id = a.account_id
        left join cost c on s.cost_id = c.cost_id
        where service_id=#{serviceId}
    </select>

    <select id="findAll" resultMap="serviceMap" parameterType="com.netctoss_springboot.pojo.SearchCondition">
        select
        service_id,s.account_id,a.idcard_no,a.real_name,os_username,s.status,
        unix_host,s.cost_id,c.name,c.descr
        from service s
        left join account a on s.account_id = a.account_id
        left join cost c on s.cost_id = c.cost_id
        <where>
            <if test="osUsername != null and osUsername != '' ">
                and os_username =#{osUsername}
            </if>
            <if test=" unixHost != null and unixHost != '' ">
                and unix_host =#{unixHost}
            </if>
            <if test="idCardNo != null and idCardNo != '' ">
                and a.idcard_no =#{idCardNo}
            </if>
            <if test="status != null and status != '-1' ">
                and s.status =#{status}
            </if>
        </where>
        order by s.service_id
    </select>

    <update id="deleteService" parameterType="integer">
        update service
        set status='2',
        close_date=CURRENT_TIMESTAMP(0)
        where service_id=#{serviceId}
    </update>

    <update id="changeStatus" parameterType="integer" >
        update service
        set status = CASE
        WHEN status = 1 THEN 0
        ELSE 1
        END,
        create_date = CASE
        WHEN status = 1 THEN CURRENT_TIMESTAMP(0)
        ELSE NULL
        END,
        pause_date = CASE
        WHEN status = 0 THEN CURRENT_TIMESTAMP(0)
        ELSE NULL
        END
        where service_id = #{serviceId};
    </update>

    <update id="updateService" parameterType="object">
        update service s
        join cost c on s.cost_id = c.cost_id
        set s.os_username = #{osUsername},
        s.unix_host = #{unixHost},
        c.cost_type = #{costType}
        where s.service_id = #{serviceId};
    </update>

    <insert id="addService" parameterType="object">
        insert into service(unix_host,os_username,login_passwd)
        values(#{unixHost},#{osUsername},#{loginPasswd});
    </insert>

    <select id="findByIdCardNo" resultMap="com.netctoss_springboot.mapper.AccountMapper.AccountMap">
        select idcard_no,login_name
        from account
        where idcard_no=#{idCardNo}
    </select>


</mapper>